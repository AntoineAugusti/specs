{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {
    "profile": {
      "title": "Profile",
      "description": "The profile of this descriptor.",
      "context": "Every Package and Resource descriptor has a profile. The default profile, if none is declared, is `default`. The namespace for the profile is the type of descriptor, so, `default` for a Package descriptor is not the same as `default` for a Resource descriptor.",
      "type": "string",
      "default": "default",
      "examples": [
        "\"profile\": \"tabular\"",
        "\"profile\": \"fiscal\"",
        "\"profile\": \"http://example.com/my-profiles-json-schema.json\""
      ]
    },
    "name": {
      "title": "Name",
      "description": "An identifier for this descriptor. Lower case characters with '.', '_' and '-' are allowed.",
      "type": "string",
      "pattern": "^([a-z0-9._-])+$",
      "context": "This is ideally a url-usable and human-readable name for the package. Name `SHOULD` be invariant, meaning it `SHOULD NOT` change when a data package is updated.",
      "examples": [
        "\"name\": \"my-package-name\""
      ]
    },
    "title": {
      "title": "Title",
      "description": "A human-readable title.",
      "type": "string",
      "examples": [
        "\"title\": \"My Package Title\""
      ]
    },
    "description": {
      "title": "Description",
      "description": "A text description. Markdown is encouraged.",
      "type": "string",
      "examples": [
        "# My Package description\nAll about my package."
      ]
    },
    "homepage": {
      "title": "Home Page",
      "description": "The home on the web that is related to this data package.",
      "oneOf": [
        { "type": "string", "format": "uri" },
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "path": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      ],
      "examples": [
        "\"homepage\": \"http://www.example.com\"",
        "\"homepage\": { \"name\": \"My Web Page\", \"path\": \"http://example.com/\" }"
      ]
    },
    "version": {
      "title": "Version",
      "description": "A unique version number for this descriptor.",
      "type": "string",
      "examples": [
        "\"version\": \"0.0.1\"",
        "\"version\": \"1.0.1-beta\""
      ]
    },
    "path": {
      "title": "Path",
      "description": "A URI to this data source, being either an HTTP address or a file path. The value may also be an array of such URIs.",
      "oneOf": [
        { "type": "string", "format": "uri" },
        { "type": "array", "items": { "minItems": 1, "type": "string", "format": "uri" } }
      ],
      "examples": [
        "\"path\": \"file.csv\"",
        "\"path\": \"http://example.com/file.csv\"",
        "\"path\": [ \"file1.csv\", \"file2.csv\" ]",
        "\"path\": [ \"http://example.com/file1.csv\", \"http://example.com/file2.csv\" ]"
      ],
      "context": "Implementations need to negotiate the type of URI provided, and dereference the data accordingly. When `path` is a local file path, it `MUST` be a sub-path relative to the location of the descriptor.",
      "notes": [
        "Prior to the v1 specifications, there was a `url` property distinct from `path`. In order to support backwards compatability, implementors `MAY` want to automatically convert a `url` property to a `path` property and issue a warning.",
        "When `path` is an array, all data sources in the array `MUST` be of the same type (i.e.: all http URLs, or all file paths).",
        "When `path` is an all data sources in the array `MUST` be similar in terms of structure and format. Implementations `SHOULD` be able to simply concatenate the files together and treat the result as one large file."
      ]
    },
    "data": {
      "title": "Data",
      "description": "The inline data for this resource.",
      "anyOf": [
        { "type": "string" },
        { "type": "array" },
        { "type": "object" }
      ],
      "context": "The value of the data attribute `MUST` be commensurate with a native, dereferenced representation of the data the resource describes, as if it was the parsed and loaded form of a data source described in `path`. For example, in a *Tabular* Data Resource, this means that the value of `data` `MUST` be an array.",
      "examples": [
        "\"data\": \"iVBORw0KGgoAAAANSUhEUgAAB4AAAARgCAMAAAA/0LvrAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ{...}\"",
        "\"data\": { \"a\": 1, \"b\": 2 }",
        "\"data\": {\"fields\": {\"title\": \"My Post\", \"content\": \"My post content.\", \"type\": \"post\"}"
      ]
    },
    "format": {
      "title": "Format",
      "description": "The file format of this resource.",
      "context": "`csv`, `xls`, `json` are examples of common formats.",
      "type": "string"
    },
    "mediatype": {
      "title": "Media Type",
      "description": "The media type of this resource.",
      "type": "string",
      "pattern": "^(.+)/(.+)$"
    },
    "encoding": {
      "title": "Encoding",
      "description": "The file encoding of this resource.",
      "type": "string"
    },
    "bytes": {
      "title": "Bytes",
      "description": "The size of this resource in bytes.",
      "type": "integer"
    },
    "hash": {
      "title": "Hash",
      "type": "string",
      "description": "The MD5 hash of this resource. Indicate other hashing algorithms with the {algorithm}:{hash} format.",
      "pattern": "^([^:]+:[a-fA-F0-9]+|[a-fA-F0-9]{32}|)$"
    },
    "created": {
      "title": "Created",
      "description": "The datetime on which this descriptor was created.",
      "context": "The datetime must conform to the string formats for datetime as described in [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6)",
      "type": "string",
      "format": "date-time"
    },
    "author": {
      "title": "Author",
      "description": "A contributor to this descriptor.",
      "oneOf": [
        { "type": "string" },
        {
          "type": "object",
          "properties": {
            "name": { "type": "string" },
            "path": { "type": "string", "format": "uri" },
            "email": { "type": "string", "format": "email" }
          },
          "required": [ "name" ]
        }
      ],
      "context": "Use of this property does not imply that the person was the original creator of, or a contributor to, the data in the descriptor, but refers to the composition of the descriptor itself.",
      "examples": [
        "\"author\": \"Joe Bloggs <joe@bloggs.com>\"",
        "{ \"name\": \"Joe Bloggs\", \"email\": \"joe@bloggs.com\", \"path\": \"http://www.bloggs.com\" }"
      ]
    },
    "contributors": {
      "title": "Contributors",
      "description": "The contributors to this descriptor.",
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/definitions/author" }
    },
    "license": {
      "title": "License",
      "description": "A license for this descriptor.",
      "oneOf": [
        { "type": "string" },
        {
          "type": "object",
          "properties": {
            "type": { "type": "string" },
            "path": { "type": "string", "format": "uri" }
          },
          "required": [ "type" ]
        }
      ],
      "context": "Use of this property does not imply that the person was the original creator of, or a contributor to, the data in the descriptor, but refers to the composition of the descriptor itself.",
      "examples": [
        "{ \"license\" : \"ODC-PDDL-1.0\" }",
        "{ \"license\": { \"type\": \"ODC-PDDL-1.0\", \"path\": \"http://opendatacommons.org/licenses/pddl/\" }"
      ]
    },
    "licenses": {
      "title": "Licenses",
      "description": "The license under which this package is published.",
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/definitions/license" },
      "context": "This property is not legally binding and does not guarantee that the package is licensed under the terms defined herein."
    },
    "source": {
      "title": "Source",
      "description": "A source file.",
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "path": { "type": "string", "format": "uri" },
        "email": { "type": "string", "format": "email" }
      },
      "anyOf": [
        { "title": "name required", "required": [ "name" ] },
        { "title": "path required", "required": [ "path" ] },
        { "title": "email required", "required": [ "email" ] }
      ]
    },
    "sources": {
      "title": "Sources",
      "description": "The raw sources for this resource.",
      "type": "array",
      "minItems": 0,
      "items": { "$ref": "#/definitions/source" },
      "examples": [
        "\"sources\": [{ \"name\": \"World Bank and OECD\", \"path\": \"http://data.worldbank.org/indicator/NY.GDP.MKTP.CD\" }]"
      ]
    },
    "keywords": {
      "title": "Keywords",
      "description": "A list of keywords that describe this package.",
      "type": "array",
      "items": { "type": "string" }
    },
    "image": {
      "title": "Image",
      "description": "A image to represent this package.",
      "type": "string",
      "format": "uri"
    },
    "delimiter": {
      "title": "Delimiter",
      "description": "A character sequence to use as the field separator.",
      "type": "string",
      "default": ",",
      "examples": [
        "\"delimiter\": \",\"",
        "\"delimiter\": \";\""
      ]
    },
    "doubleQuote": {
      "title": "Double Quote",
      "description": "Specifies the handling of quotes inside fields.",
      "context": "If Double Quote is set to true, two consecutive quotes must be interpreted as one.",
      "type": "boolean",
      "default": true,
      "examples": [
        "\"doubleQuote\": true"
      ]
    },
    "lineTerminator": {
      "title": "Line Terminator",
      "description": "Specifies the character sequence that must be used to terminate rows.",
      "type": "string",
      "default": "\r\n",
      "examples": [
        "\"lineTerminator\": \"\\r\\n\"",
        "\"lineTerminator\": \"\\n\""
      ]
    },
    "nullSequence": {
      "title": "Null Sequence",
      "description": "Specifies the null sequence, for example, `\\N`.",
      "type": "string",
      "examples": [
        "\"nullSequence\": \"\\N\""
      ]
    },
    "quoteChar": {
      "title": "Quote Character",
      "description": "Specifies a one-character string to use as the quoting character.",
      "type": "string",
      "default": "\"",
      "examples": [
        "\"quoteChar\": \"\"\"",
        "\"quoteChar\": \"'\""
      ]
    },
    "escapeChar": {
      "title": "Escape Character",
      "description": "Specifies a one-character string to use as the escape character.",
      "type": "string",
      "default": "\\",
      "examples": [
        "\"escapeChar\": \"\\\""
      ]
    },
    "skipInitialSpace": {
      "title": "Skip Initial Space",
      "description": "Specifies the interpretation of whitespace immediately following a delimiter. If false, whitespace immediately after a delimiter should be treated as part of the subsequent field.",
      "type": "boolean",
      "default": true,
      "examples": [
        "\"skipInitialSpace\": true"
      ]
    },
    "header": {
      "title": "Header",
      "description": "Specifies if the file includes a header row, always as the first row in the file.",
      "type": "boolean",
      "default": true,
      "examples": [
        "\"header\": true"
      ]
    },
    "caseSensitiveHeader": {
      "title": "Case Sensitive Header",
      "description": "Specifies if the case of headers is meaningful.",
      "context": "Use of case in source CSV files is not always an intentional decision. For example, should \"CAT\" and \"Cat\" be considered to have the same meaning.",
      "type": "boolean",
      "default": false,
      "examples": [
        "\"caseSensitiveHeader\": true"
      ]
    },
    "csvDialect": {
      "title": "CSV Dialect",
      "description": "The CSV dialect descriptor.",
      "type": "object",
      "required": [ "delimiter", "doubleQuote" ],
      "properties": {
        "delimiter": { "$ref": "#/definitions/delimiter" },
        "doublequote": { "$ref": "#/definitions/doubleQuote" },
        "lineTerminator": {  "type": "#/definitions/lineTerminator" },
        "nullSequence": { "$ref": "#/definitions/nullSequence" },
        "quoteChar": { "$ref": "#/definitions/quoteChar" },
        "escapeChar": { "$ref": "#/definitions/escapeChar" },
        "skipInitialSpace": { "$ref": "#/definitions/skipInitialSpace" },
        "header": { "$ref": "#/definitions/header" },
        "caseSensitiveHeader": { "$ref": "#/definitions/caseSensitiveHeader" }
      }
    },
    "countryCode": {
      "title": "ISO 3166-1 Alpha-2 Country code",
      "description": "A valid 2-digit ISO country code (ISO 3166-1 alpha-2), or, an array of valid ISO codes.",
      "oneOf": [
        { "type": "string", "pattern": "^[A-Z]{2}$" },
        { "type": "array", "minItems": 1, "items": { "type": "string", "pattern": "^[A-Z]{2}$" } }
      ]
    }
  }
}
