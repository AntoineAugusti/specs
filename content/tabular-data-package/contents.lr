_model: specification-rfc
---
title: Tabular Data Package
---
slug: tabular-data-package
---
mediatype: application/vnd.datapackage+json
---
version: 1.0.0-rc.2
---
updated: 2 May 2017
---
created: 7 May 2012
---
descriptor: datapackage.json
---
abstract:

A simple format for describing tabular-style data and its metadata.
---
body:

Tabular Data Package is a simple container format used to describe and package a collection of data sources with additional metadata about those data sources. By providing a minimum set of required properties and a range of optional properties, the format enables a simple contract for data interoperability (delivery, installation, management) that is governed by minimalism.

Tabular Data Package is a [Data Package profile](/data-package/#profile) for publishing and sharing tabular data. Table Schema has a focus on ease of use over the web, and on simplifying the production and consumption of tabular data to/from spreadsheets and data storage backends such as SQL databases.

Tabular Data Package builds directly on the [Data Package](/data-package/) specification, and therefore a valid Tabular Data Package `MUST` be a valid Data Package.

Tabular Data Package has the following requirements over and above those imposed by [Data Package](/data-package):

- There `MUST` be at least one `resource` in the `resources` `array`
- Each `resource` `MUST` be a valid [Tabular Data Resource](/tabular-data-resource/)
- Each URI in the `resource.data` array `MUST` point to a file in CSV format. The CSV file `MUST` conform to the constraints described in the [CSV dialect](/csv-dialect/) specification
- Each `resource` `MUST` have a `schema` property whose value `MUST` be a valid [Table Schema](/table-schema/) (either inlined, or as a URI to a file)

### Why CSV?

1.  CSV is very simple - it is perhaps *the* most simple data format
2.  CSV is tabular-oriented. Most data structures are either tabular or can be transformed to a tabular structure by some form of normalization
3.  It is open and the "standard" is well-known
4.  It is widely supported - practically every spreadsheet program, relational database and programming language in existence can handle CSV in some form or other
5.  It is text-based and therefore amenable to manipulation and access from a wide range of standard tools (including revision control systems such as git, mercurial and subversion)
6.  It is line-oriented which means it can be incrementally processed - you do not need to read an entire file to extract a single row. For similar reasons it means that the format supports streaming.

More informally:

> CSV is the data Kalashnikov: not pretty, but many wars have been
fought with it and kids can use it.
[[@pudo](https://twitter.com/pudo/status/248473299741446144) (Friedrich
Lindenberg)]

> CSV is the ultimate simple, standard data format - streamable,
text-based, no need for proprietary tools etc [@rufuspollock (Rufus
Pollock)]
